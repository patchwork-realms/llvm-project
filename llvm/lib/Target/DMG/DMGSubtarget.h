#ifndef LLVM_LIB_TARGET_DMG_DMGSUBTARGET_H
#define LLVM_LIB_TARGET_DMG_DMGSUBTARGET_H

#include "DMGFrameLowering.h"
#include "DMGISelLowering.h"
#include "DMGInstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "DMGGenSubtargetInfo.inc"

namespace llvm {

class StringRef;
class TargetMachine;

class DMGSubtarget : public DMGGenSubtargetInfo {
    virtual void anchor();
    DMGInstrInfo InstrInfo;
    DMGFrameLowering FrameLowering;
    DMGTargetLowering TLInfo;
    SelectionDAGTargetInfo TSInfo;

    // Compiler extensions represented as subtarget features
    bool UseSoftFloat = false;
    bool UseSoftMulDiv = false;

public:
    DMGSubtarget(const Triple &TT, const std::string &CPU, const std::string &FS, const TargetMachine &TM);

    /// Parses features string setting specified subtarget options.
    /// The definition of the function is generated by TableGen.
    void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

    DMGSubtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS,
                                                  const TargetMachine &TM);

    const DMGInstrInfo *getInstrInfo() const override { return &InstrInfo; }
    const DMGFrameLowering *getFrameLowering() const override {
        return &FrameLowering;
    }
    const DMGTargetLowering *getTargetLowering() const override {
        return &TLInfo;
    }
    const DMGRegisterInfo *getRegisterInfo() const override {
        return &InstrInfo.getRegisterInfo();
    }
    const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
        return &TSInfo;
    }

    bool hasSoftFloat() const { return UseSoftFloat; }
    bool hasSoftMulDiv() const { return UseSoftMulDiv; }
};

} // end namespace llvm


#endif // LLVM_LIB_TARGET_DMG_DMGSUBTARGET_H